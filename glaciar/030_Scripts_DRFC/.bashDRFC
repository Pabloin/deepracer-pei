echo "En DRFC"

# TODO

# Funcion que tome del Config y PISE ... 


alias HH="cd ~/deepracer-pei/deepracer-for-cloud"
alias MM="cd ~/MINIO_SYNC/Spot-Tracks"



export PATH_DRFC_Config=~/deepracer-pei/glaciar/010_Configs/DRFC_Configs
# ~/deepracer-pei/glaciar/010_Configs$ tree -La 2
#     .
#     ├── DOTS_Configs
#     │   ├── .config_DOTS_0001_orig
#     │   ├── .config_DOTS_000_reset
#     │   └── .config_DOTS_002_DE10
#     └── DRFC_Configs
#         ├── .config_DRFC_000_reset
#         ├── .config_DRFC_001_aws_orig
#         ├── .config_DRFC_001_local_orig
#         └── .config_DRFC_002_local_minio


alias D000="cd  ${PATH_DRFC_Config}/.config_DRFC_000_reset"
alias D001a="cd ${PATH_DRFC_Config}/.config_DRFC_001_aws_orig"
alias D001l="cd ${PATH_DRFC_Config}/.config_DRFC_001_local_orig"
alias D002="cd  ${PATH_DRFC_Config}/.config_DRFC_002_local_minio"



export PATH_DRFC_Models=~/deepracer-pei/glaciar/012_Models/DRFC_Models
# ~/deepracer-pei/glaciar/012_Models$ tree -La 4
#     .
#     ├── DOTS_Models
#     │   └── Readme.md
#     └── DRFC_Models
#         ├── Readme.md
#         └── T2024-01
#             └── Spot-Tracks
#                 └── .config_DE10


alias DE10="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_DE10"
alias DE11="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_DE11"
alias DE12="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_DE12"




# REPETIDA CON DOTS (Mantener sincro iguales)
function prof() {

    PROF_UBUNTU=~/.profile

    if [ -f ${PROF_UBUNTU} ]; then
        source ${PROF_UBUNTU}
    fi
}

export PATH=$PATH:$HOME/minio-binaries/


cat ~/.aws/config | grep profile

echo ""


# alias hello="cat ~/hello.txt"

alias hello="vim ~/hello.txt"

alias   C="vim ~/.aws/credentials"


S3_SMINIO_SOURCE=~/MINIO_SYNC
S3_SMINIO_SERVER=local
S3_SMINIO_BUCKET=bucket-models-2024-01


S3_BUCKET_TARGET=dr-models-glaciar-dots-to-pabloedu-gmail


# KEY_MODEL=Ulab-Tracks
KEY_MODEL=Spot-Tracks


function spUp() {

    echo "                                                                 "
    echo "  cd           ${S3_SMINIO_SOURCE}/${KEY_MODEL}                  "    
    echo "                                                                 "
    echo "  aws s3 sync  ${S3_SMINIO_SOURCE}/${KEY_MODEL}/  \   "
    echo "          s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/  \   "
    echo "                 --profile bastion_PEZE_DRFC_CPU       "
    echo "                                                                 "
    echo "                                                                 "
        
    read -p "Hacemos UP? (Y/N): " confirm && [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]] || return 1

    cd  ${S3_SMINIO_SOURCE}/${KEY_MODEL} 
                                                                
    aws s3 sync  ${S3_SMINIO_SOURCE}/${KEY_MODEL}/  \
            s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/  \
                    --profile bastion_PEZE_DRFC_CPU    

}

# Down de local Minio
function spDown() {

    MINIO_HOME=${S3_SMINIO_SERVER}/${S3_SMINIO_BUCKET}/${KEY_MODEL}

    echo "                             "
    echo "  mc ls ${MINIO_HOME}        "    
    echo "                             "
 
    mc ls ${MINIO_HOME}    

    read -p "¿Modelo Version Name?  (Ejemplo: "lgy-model-NNN" o "aws-beast-nnn"? " MODEL_VERSION_NAME

    cd  ${S3_SMINIO_SOURCE} 

    mc cp ${MINIO_HOME}/${MODEL_VERSION_NAME}  ${KEY_MODEL}/ --recursive

}

function spImport() {

    aws deepracer list-models --model-type REINFORCEMENT_LEARNING  \
                 --query 'Models[].{ModelArn: ModelArn, ModelName: ModelName} '  \
                 --profile  bastion_PEZE_DRFC_CPU     \
                 --output table

    echo "  "
    echo "  aws s3 ls s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/  \               "
    echo "               --profile  bastion_PEZE_DRFC_CPU           "
    echo "  "

    aws s3 ls s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/  \
                 --profile  bastion_PEZE_DRFC_CPU 

    read -p "¿Modelo Version Name?  (Ejemplo: "lgy-model-NNN" o "aws-beast-nnn"? " MODEL_VERSION_NAME

    echo "   "
    echo "  aws deepracer import-model \                 "
    echo "      --type REINFORCEMENT_LEARNING \          "
    echo "      --name ${MODEL_VERSION_NAME}  \                 "
    echo "      --model-artifacts-s3-path s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/${MODEL_VERSION_NAME} \ "
    echo "      --role-arn arn:aws:iam::307424703238:role/LabRole \      "
    echo "      --profile  bastion_PEZE_DRFC_CPU               "
    echo "   "

    aws deepracer import-model \
        --type REINFORCEMENT_LEARNING \
        --name ${MODEL_VERSION_NAME}  \
        --model-artifacts-s3-path s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/${MODEL_VERSION_NAME} \
        --role-arn arn:aws:iam::307424703238:role/LabRole \
        --profile  bastion_PEZE_DRFC_CPU               
   
}



function drActivate() {

    source ~/deepracer-pei/deepracer-for-cloud/bin/activate.sh
}

function drAll() {

    dr-update;
    dr-upload-custom-files;
    
}


function menu() {

cat << EOM

menu, $1!

Estoy en  ~/deepracer-pei/glaciar/030_Scripts_DRFC/.bashDRFC

    - prof - hello - doing 

    - SPOT (Minio): spDown | spUp | spImport 

    # - drSync      |  drDown     | drUp  | TBD - logs | model 
    # - drImport    | drImportGlaciar 
    # - goVirginia  | _set _getRegion  
    # - aws.ec2.run | aws.ec2.all 


    alias - C | HH MM | 
    
                        # B01 (B,C,D) | F01 | F02 | F02C,D,H,T,W | A01 a,b,c,d..  

    -------------------------------------------------------- 
    S3_SMINIO_SOURCE=${S3_SMINIO_SOURCE}
    S3_BUCKET_TARGET=${S3_BUCKET_TARGET}
    S3_SMINIO_BUCKET=${S3_SMINIO_BUCKET}
    MODEL = ${KEY_MODEL}  

EOM




    cat ~/.aws/config | grep profile

    echo ""


}

menu



function doing() {

    # The string after << indicates where to stop.
    cat << EOM 
    
    DOING:

    - pablo-eze-edu: Spots ... TBD ... 
    
    # jupyter notebook como servicio
    

    STATUS:
    -           JLab | Ubuntu | TBD | TBD |

    - PEZEG  |   X   |    X   |  -  |  100% config ... USD 9 gastado
    - DEMET  |   X   |    X   |  -  |  100% config ... USD 0 gastado

    - Notas... 
    

EOM
}
# doing


