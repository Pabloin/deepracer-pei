echo "En DRFC"

# TODO

# Funcion que tome del Config y PISE ... 


alias HH="cd ~/deepracer-pei/deepracer-for-cloud"
alias MM="cd ~/MINIO_SYNC/Spot-Tracks"



export PATH_DRFC_Config=~/deepracer-pei/glaciar/010_Configs/DRFC_Configs
# ~/deepracer-pei/glaciar/010_Configs$ tree -La 2
#     .
#     ├── DOTS_Configs
#     │   ├── .config_DOTS_0001_orig
#     │   ├── .config_DOTS_000_reset
#     │   └── .config_DOTS_002_DE10
#     └── DRFC_Configs
#         ├── .config_DRFC_000_reset
#         ├── .config_DRFC_001_aws_orig
#         ├── .config_DRFC_001_local_orig
#         └── .config_DRFC_002_local_minio


alias D000="cd  ${PATH_DRFC_Config}/.config_DRFC_000_reset"
alias D001a="cd ${PATH_DRFC_Config}/.config_DRFC_001_aws_orig"
alias D001l="cd ${PATH_DRFC_Config}/.config_DRFC_001_local_orig"
alias D002="cd  ${PATH_DRFC_Config}/.config_DRFC_002_local_minio"



export PATH_DRFC_Models=~/deepracer-pei/glaciar/012_Models/DRFC_Models
# ~/deepracer-pei/glaciar/012_Models$ tree -La 4
#     .
#     ├── DOTS_Models
#     │   └── Readme.md
#     └── DRFC_Models
#         ├── Readme.md
#         └── T2024-01
#             └── Spot-Tracks
#                 └── .config_DE10


alias DE10="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_DE10"
alias DE11="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_DE11"
alias DE12="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_DE12"

alias LUZ001="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_LUZ-001"
alias LUZ002="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_LUZ-002"
alias LUZ003="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_LUZ-003"

alias LUZ100="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_LUZ-100"
alias LUZ101="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_LUZ-101"
alias LUZ102="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_LUZ-102"
alias LUZ103="cd  ${PATH_DRFC_Models}/T2024-01/Spot-Tracks/.config_LUZ-103"


# REPETIDA CON DOTS (Mantener sincro iguales)
function prof() {

    PROF_UBUNTU=~/.profile

    if [ -f ${PROF_UBUNTU} ]; then
        source ${PROF_UBUNTU}
    fi
}


function setx() {
    ls -la 
    chmod +x xSet.sh
    ls -la 
    git add xSet.sh; git commit -m "setx"; git push
}

export PATH=$PATH:$HOME/minio-binaries/


cat ~/.aws/config | grep profile

echo ""


sudo chown ubuntu  ~/hello.txt
sudo chgrp ubuntu  ~/hello.txt


alias hello="vim  ~/hello.txt"
alias hellos="cat ~/hello.txt"

alias   C="vim ~/.aws/credentials"

alias costos="cd ~/deepracer-pei/glaciar/030_Scripts_DRFC/aws_scripts/"


S3_SMINIO_SOURCE=~/MINIO_SYNC
# S3_SMINIO_SERVER=local
S3_SMINIO_SERVER=myminio
S3_SMINIO_BUCKET=bucket-models-2024-01


S3_BUCKET_TARGET=dr-models-glaciar-dots-to-pabloedu-gmail
PROFILE_PEZE_EDU=bastion_PEZE_DRFC_CPU
PROFILE_LAB_ROLE=arn:aws:iam::307424703238:role/LabRole

# KEY_MODEL=Ulab-Tracks
KEY_MODEL=Spot-Tracks


function spUp() {

    echo "                                                                 "
    echo "  cd           ${S3_SMINIO_SOURCE}/${KEY_MODEL}                  "    
    echo "                                                                 "
    echo "  aws s3 sync  ${S3_SMINIO_SOURCE}/${KEY_MODEL}/  \   "
    echo "          s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/  \   "
    echo "                 --profile ${PROFILE_PEZE_EDU}       "
    echo "                                                                 "
    echo "                                                                 "
        
    read -p "Hacemos UP? (Y/N): " confirm && [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]] || return 1

    cd  ${S3_SMINIO_SOURCE}/${KEY_MODEL} 
                                                                
    aws s3 sync  ${S3_SMINIO_SOURCE}/${KEY_MODEL}/  \
            s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/  \
                    --profile ${PROFILE_PEZE_EDU}    

}


function spDwon_S3() {

    echo "  "
    echo "  aws s3 ls s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/  \            "
    echo "               --profile  ${PROFILE_PEZE_EDU}                    "
    echo "  "

    aws s3 ls s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/  \
             --profile  ${PROFILE_PEZE_EDU} 

    read -p "¿Folder Model S3?  (Ejemplo:  "LUZ-101b"     ? "   MODEL_FOLDER

    echo "                                                                 "
    echo "  cd           ${S3_SMINIO_SOURCE}/${KEY_MODEL}                  "    
    echo "                                                                 "
    echo "  aws s3 sync   \                                                "
    echo "         s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/   \              "
    echo "              ${S3_SMINIO_SOURCE}/${KEY_MODEL}/${MODEL_FOLDER} \ "
    echo "         --profile  ${PROFILE_PEZE_EDU}                          "
    echo "                                                                 "
    echo "                                                                 "
        
    read -p "Hacemos DOWN S3 ? (Y/N): " confirm && [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]] || return 1

    cd  ${S3_SMINIO_SOURCE}/${KEY_MODEL} 
                                                                
    aws s3 sync s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/${MODEL_FOLDER}  \
                     ${S3_SMINIO_SOURCE}/${KEY_MODEL}/  \
                    --profile ${PROFILE_PEZE_EDU}    

}

# Down de local Minio
function spDown_Minio() {

    MINIO_HOME=${S3_SMINIO_SERVER}/${S3_SMINIO_BUCKET}/${KEY_MODEL}

    echo "                             "
    echo "  mc ls ${MINIO_HOME}        "    
    echo "                             "
 
    mc ls ${MINIO_HOME}    

    read -p "¿Modelo Version Name?  (Ejemplo: "lgy-model-NNN" o "aws-beast-nnn"? " MODEL_FOLDER

    echo "                                                                           "
    echo "  cd  ${S3_SMINIO_SOURCE}                                                  "    
    echo "                                                                           "
    echo "  mc cp ${MINIO_HOME}/${MODEL_FOLDER}  ${KEY_MODEL}/ --recursive     "
    echo "                                                                           "
    

    cd  ${S3_SMINIO_SOURCE} 

    mc cp ${MINIO_HOME}/${MODEL_FOLDER}  ${KEY_MODEL}/ --recursive

}

function spImport() {

    aws deepracer list-models --model-type REINFORCEMENT_LEARNING  \
                 --query 'Models[].{ModelArn: ModelArn, ModelName: ModelName} '  \
                 --profile  ${PROFILE_PEZE_EDU}     \
                 --output table

    echo "  "
    echo "  aws s3 ls s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/  \               "
    echo "               --profile  ${PROFILE_PEZE_EDU}           "
    echo "  "

    aws s3 ls s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/  \
                 --profile  ${PROFILE_PEZE_EDU} 


    read -p "¿Folder Modelo S3/minio ?  (Ejemplo:  "LUZ-001"       ? " MODEL_FOLDER
    read -p "¿Alias  Modelo Name     ?  (Ejemplo:  "LUZ-001-Wip01" ? " MODEL_NAME_ALIAS

    echo "   "
    echo "  aws deepracer import-model \                 "
    echo "      --type REINFORCEMENT_LEARNING \          "
    echo "      --name ${MODEL_NAME_ALIAS}  \                 "
    echo "      --model-artifacts-s3-path s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/${MODEL_FOLDER} \ "
    echo "      --role-arn ${PROFILE_LAB_ROLE} \      "
    echo "      --profile  ${PROFILE_PEZE_EDU}               "
    echo "   "

    read -p "Hacemos spImport? Todo Ok? (Y/N): " confirm && [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]] || return 1

    aws deepracer import-model \
        --type REINFORCEMENT_LEARNING \
        --name ${MODEL_NAME_ALIAS}  \
        --model-artifacts-s3-path s3://${S3_BUCKET_TARGET}/${KEY_MODEL}/${MODEL_FOLDER} \
        --role-arn ${PROFILE_LAB_ROLE} \
        --profile  ${PROFILE_PEZE_EDU}               
   
}

function spImportLuz() {

    S3_BUCKET_TARGET=dr-models-luz-to-peze-edu
    PROFILE_PEZE_EDU=luz
    PROFILE_LAB_ROLE=arn:aws:iam::559093250226:role/LabRole
    
    spImport

    S3_BUCKET_TARGET=dr-models-glaciar-dots-to-pabloedu-gmail
    PROFILE_PEZE_EDU=bastion_PEZE_DRFC_CPU
    PROFILE_LAB_ROLE=arn:aws:iam::307424703238:role/LabRole
}

function spUpLuz() {

    S3_BUCKET_TARGET=dr-models-luz-to-peze-edu
    PROFILE_PEZE_EDU=luz

    spUp

    S3_BUCKET_TARGET=dr-models-glaciar-dots-to-pabloedu-gmail
    PROFILE_PEZE_EDU=bastion_PEZE_DRFC_CPU
}


function drActivate() {

    source ~/deepracer-pei/deepracer-for-cloud/bin/activate.sh
}

function drAll() {
    dr-update;
    dr-upload-custom-files;    
}

function drLuz() {
    
    ~/deepracer-pei/glaciar/012_Models/DRFC_Models/T2024-01/Spot-Tracks/.config_LUZ-001/xSet.sh

    dr-update;
    dr-upload-custom-files;
    
}



##--------------------
AWS_CLI_PROFILE=default

function aws.ec2.run() {

cat << EOM
    # aws.ec2.run
    #     Se EJECUTA:

    aws ec2 describe-instances --filters Name=instance-state-name,Values=running  \
          --query 'Reservations[].Instances[*].{InstanceType: InstanceType, InstanceId: InstanceId, State: State.Name, Placement: Placement.AvailabilityZone }'  \
          --output table \
          --profile ${AWS_CLI_PROFILE}  
EOM
    aws s3 ls --profile ${AWS_CLI_PROFILE} | grep config


    aws ec2 describe-instances --filters Name=instance-state-name,Values=running  \
          --query 'Reservations[].Instances[*].{InstanceType: InstanceType, InstanceId: InstanceId, State: State.Name, Placement: Placement.AvailabilityZone }'  \
          --output table \
          --profile ${AWS_CLI_PROFILE}
}


function aws.ec2.all() {

cat << EOM
    # aws.ec2.all
    #     Se Utiliza: ${AWS_CLI_PROFILE}
EOM
  aws s3 ls  | grep config


  REGIONS=`aws ec2 describe-regions --region us-east-1 --output text --query Regions[*].[RegionName]`

  REGIONS_PEI='us-east-1 af-south-1 sa-east-1 eu-north-1'
  for REGION in $REGIONS_PEI
  do
    echo -e "\nInstances in '$REGION'..";
    aws ec2 describe-instances --region $REGION | \
      jq '.Reservations[].Instances[] | "EC2: \(.InstanceId): \(.State.Name) \(.InstanceType)  "'
  done
}



function aws.ec2.run.luz() {

    AWS_CLI_PROFILE=luz
    
    aws.ec2.run  

    echo " Para detener:"
    echo "          "
    echo " aws ec2 stop-instances --profile ${AWS_CLI_PROFILE} --instance-ids id-todelete    "
    echo "                                                "
    
    AWS_CLI_PROFILE=default

}


##----------------------------

function menu() {

cat << EOM

menu, $1!

Estoy en  ~/deepracer-pei/glaciar/030_Scripts_DRFC/.bashDRFC

    - prof - setx - hello - doing - costos

    - SPOT (Minio): spDown_Minio  |  spUp     |  spImport 
                    spDwon_S3     |  spUpLuz  |  spImportLuz
                    spDwon_S3Luz  |  -        |  -

    - aws.ec2.run | aws.ec2.all 
    
    
    # - drSync      |  drDown     | drUp  | TBD - logs | model 
    # - drImport    | drImportGlaciar 
    # - goVirginia  | _set _getRegion  


    alias - C | HH MM | 
    
                        # B01 (B,C,D) | F01 | F02 | F02C,D,H,T,W | A01 a,b,c,d..  

    -------------------------------------------------------- 
    S3_SMINIO_SOURCE=${S3_SMINIO_SOURCE}
    S3_BUCKET_TARGET=${S3_BUCKET_TARGET}
    S3_SMINIO_BUCKET=${S3_SMINIO_BUCKET}
    MODEL = ${KEY_MODEL}  

EOM




    cat ~/.aws/config | grep profile

    echo ""


}

menu



function doing() {

    # The string after << indicates where to stop.
    cat << EOM 
    
    DOING:

    - pablo-eze-edu: Spots ... TBD ... 
    
    # jupyter notebook como servicio
    

    STATUS:
    -           JLab | Ubuntu | TBD | TBD |

    - PEZEG  |   X   |    X   |  -  |  100% config ... USD 9 gastado
    - DEMET  |   X   |    X   |  -  |  100% config ... USD 0 gastado

    - Notas... 
    

EOM
}
# doing



cat << EOM > ~/my_ubuntu_golden.sh

# Echo FIXEX para que anden la instancia Golden

cd ~/deepracer-pei/deepracer-for-cloud
git pull

sudo chown ubuntu  ~/hello.txt
sudo chgrp ubuntu  ~/hello.txt

# Update Hello text
# vim ~/.aws/config     con san-pablo  (sa-east-1)
# vim ~/.aws/credential con racer1


# Para que ande sagemaker
sudo service docker stop 
sudo service docker start

# quizá docker kill el container de  awsdeepracercommunity/deepracer-sagemaker:5.1.1-gpu 
# docker ps -a
# docker kill id

# Para que ande minio (los mismos que - aws default - en mi caso racer1)
mc alias set myminio/   http://127.0.0.1:9000  Minio_USER  Minio_PASS



# Lanzar de nuevo a DRFC (lo pude lanzar sin el "prepare" pero necesitó activate y docker restart)
# docker stop/start
# activate
# los update
# train ...


EOM

